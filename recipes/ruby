#!/bin/sh

# Ruby Setup
# Install rbenv and use it to manage ruby versions
# Then install the latest version of ruby and useful gems

header_log "Ruby Setup"

brew_upgrade_or_install "rbenv"
eval "$(rbenv init -)"

# Get latest version of ruby avilable
ruby_version=$(rbenv install --list | grep -vE "(^Available versions:|dev|preview|rc)" | grep -E "^\s*[0-9]" | sed 's/^\s\+//' | tail -1 | tr -d "[:space:]")
[[ -z $ruby_version ]] && ruby_version="2.3.0"

log "installing Ruby $ruby_version"
rbenv install -s "$ruby_version"

log "setting ruby $ruby_version as the global default"
rbenv global "$ruby_version"
rbenv rehash

# Nice-To-Have Gems
log "updating to the latests rubygems version"
gem update --system

log "installing bundler"
gem install bundler
number_of_cores=$(sysctl -n hw.ncpu)
bundle config --global jobs $((number_of_cores - 1))

log "installing postgres gem"
bundle config build.pg --with-pg-config=/Applications/Postgres.app/Contents/Versions/latest/bin/pg_config
gem install pg -- --with-pg-config=/Applications/Postgres.app/Contents/Versions/latest/bin/pg_config

log "installing tmuxinator gem"
gem install tmuxinator

log "installing neovim gem"
gem install neovim

# Use rbenv plugin to install gems I always want with any Ruby version
brew_upgrade_or_install "rbenv-default-gems"
